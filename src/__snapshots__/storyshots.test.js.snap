// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Attribute default 1`] = `
.c0 {
  position: relative;
  width: 4rem;
  height: 6rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  margin: 0 0 0.2rem;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
  font-weight: bold;
  text-align: center;
}

.c5 {
  position: absolute;
  bottom: 0;
  left: 7%;
  right: 7%;
  margin-bottom: 7%;
}

.c2 {
  position: relative;
  width: 100%;
  height: 100%;
}

.c4 {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

.c3 {
  margin: 0;
  text-align: center;
  font-family: "Open Sans",arial,sans serif;
  font-size: 2rem;
}

.c6 {
  position: relative;
}

.c8 {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

.c7 {
  margin: 0;
  padding-bottom: 0.2rem;
  text-align: center;
  font-family: "Open Sans",arial,sans serif;
  font-size: 1.2rem;
  line-height: 1.25;
}

<div
  className="c0"
>
  <p
    className="c1"
  >
    Strength
  </p>
  <div
    className="c2"
  >
    <p
      className="c3"
    >
      +3
    </p>
    <img
      className="c4"
      src="shield.svg"
    />
  </div>
  <div
    className="c5"
  >
    <div
      className="c6"
    >
      <p
        className="c7"
      >
        15
      </p>
      <img
        className="c8"
        src="sub_shield.svg"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Card default 1`] = `
.c0 {
  background-color: white;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.5);
}

.c1 {
  padding: 1rem 1.2rem;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    I'm a Card
  </div>
</div>
`;

exports[`Storyshots Card with title 1`] = `
.c0 {
  background-color: white;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.5);
}

.c2 {
  margin: 0;
  padding: 0.4rem;
  font-family: Lora,Times,serif;
  font-size: 1rem;
  font-weight: bold;
  text-align: center;
  color: #2d2d2d;
}

.c1 {
  padding: 1rem 1.2rem;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    I'm a Card...
  </div>
  <p
    className="c2"
  >
    ... with a title
  </p>
</div>
`;

exports[`Storyshots ClassIcon default 1`] = `
.c0 {
  height: 100%;
  grid-row: span 2;
  justify-self: center;
  opacity: 0.6;
}

<img
  className="c0"
  src="Bard.svg"
/>
`;

exports[`Storyshots Death Saves Checkboxes Death Saves 1`] = `
.c3 {
  position: relative;
  height: 0.8rem;
  width: 0.8rem;
}

.c3 label {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: transparent;
  border: 1px solid #2d2d2d;
  border-radius: 50%;
  cursor: pointer;
}

.c3 input[type='checkbox'] {
  visibility: hidden;
  margin: 0;
  padding: 0;
  border: none;
  height: 100%;
  width: 100%;
}

.c3 input[type='checkbox']:checked + label {
  background-color: #2d2d2d;
  border-color: #2d2d2d;
}

.c4 {
  font-family: Lora;
  font-size: 0.6rem;
  text-align: right;
  color: #2d2d2d;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  margin: 0.4rem 0 0.2rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 60%;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c0 {
  width: 100px;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      reversed={true}
    >
      <div
        className="c3"
        size="small"
      >
        <input
          checked={false}
          name="death-save-0"
          onChange={[Function]}
          type="checkbox"
        />
        <label
          htmlFor="death-save-0"
        />
      </div>
      <div
        className="c3"
        size="small"
      >
        <input
          checked={false}
          name="death-save-1"
          onChange={[Function]}
          type="checkbox"
        />
        <label
          htmlFor="death-save-1"
        />
      </div>
      <div
        className="c3"
        size="small"
      >
        <input
          checked={false}
          name="death-save-2"
          onChange={[Function]}
          type="checkbox"
        />
        <label
          htmlFor="death-save-2"
        />
      </div>
    </div>
    <label
      className="c4"
      size="small"
    >
      Death saves
    </label>
  </div>
</div>
`;

exports[`Storyshots Death Saves Checkboxes Life Saves 1`] = `
.c3 {
  position: relative;
  height: 0.8rem;
  width: 0.8rem;
}

.c3 label {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: transparent;
  border: 1px solid #2d2d2d;
  border-radius: 50%;
  cursor: pointer;
}

.c3 input[type='checkbox'] {
  visibility: hidden;
  margin: 0;
  padding: 0;
  border: none;
  height: 100%;
  width: 100%;
}

.c3 input[type='checkbox']:checked + label {
  background-color: #2d2d2d;
  border-color: #2d2d2d;
}

.c4 {
  font-family: Lora;
  font-size: 0.6rem;
  text-align: left;
  color: #2d2d2d;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  margin: 0.4rem 0 0.2rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 60%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c0 {
  width: 100px;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      reversed={false}
    >
      <div
        className="c3"
        size="small"
      >
        <input
          checked={false}
          name="life-save-0"
          onChange={[Function]}
          type="checkbox"
        />
        <label
          htmlFor="life-save-0"
        />
      </div>
      <div
        className="c3"
        size="small"
      >
        <input
          checked={false}
          name="life-save-1"
          onChange={[Function]}
          type="checkbox"
        />
        <label
          htmlFor="life-save-1"
        />
      </div>
      <div
        className="c3"
        size="small"
      >
        <input
          checked={false}
          name="life-save-2"
          onChange={[Function]}
          type="checkbox"
        />
        <label
          htmlFor="life-save-2"
        />
      </div>
    </div>
    <label
      className="c4"
      size="small"
    >
      Life saves
    </label>
  </div>
</div>
`;

exports[`Storyshots Death Saves Checkboxes default 1`] = `
.c3 {
  position: relative;
  height: 0.8rem;
  width: 0.8rem;
}

.c3 label {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: transparent;
  border: 1px solid #2d2d2d;
  border-radius: 50%;
  cursor: pointer;
}

.c3 input[type='checkbox'] {
  visibility: hidden;
  margin: 0;
  padding: 0;
  border: none;
  height: 100%;
  width: 100%;
}

.c3 input[type='checkbox']:checked + label {
  background-color: #2d2d2d;
  border-color: #2d2d2d;
}

.c4 {
  font-family: Lora;
  font-size: 0.6rem;
  text-align: left;
  color: #2d2d2d;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  margin: 0.4rem 0 0.2rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 60%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c0 {
  width: 100px;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      reversed={false}
    >
      <div
        className="c3"
        size="small"
      >
        <input
          checked={false}
          name="life-save-0"
          onChange={[Function]}
          type="checkbox"
        />
        <label
          htmlFor="life-save-0"
        />
      </div>
      <div
        className="c3"
        size="small"
      >
        <input
          checked={false}
          name="life-save-1"
          onChange={[Function]}
          type="checkbox"
        />
        <label
          htmlFor="life-save-1"
        />
      </div>
      <div
        className="c3"
        size="small"
      >
        <input
          checked={false}
          name="life-save-2"
          onChange={[Function]}
          type="checkbox"
        />
        <label
          htmlFor="life-save-2"
        />
      </div>
    </div>
    <label
      className="c4"
      size="small"
    >
      LABEL
    </label>
  </div>
</div>
`;

exports[`Storyshots Inputs/Inline Field default 1`] = `
.c2 {
  font-family: Lora;
  font-size: 0.8rem;
  text-align: left;
  color: #2d2d2d;
}

.c0 {
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c1 {
  width: 100%;
  border: none;
  margin: 0;
  padding: 0.2em;
  background: none;
  font-family: "Open Sans",arial,sans serif;
  color: #2d2d2d;
  font-size: calc(1pt + 1rem);
  border: none;
  border-bottom: 2px solid transparent;
  border-image: repeating-linear-gradient( to right, rgba(0,0,0,0), rgba(0,0,0,0) 2px, rgba(45,45,45,0.8) 2px, rgba(45,45,45,0.8) 3px ) 1 repeat;
  width: 2rem;
  padding: 0.2em 0.1em;
}

.c1:active,
.c1:focus {
  outline: none;
}

<div
  className="c0"
>
  <input
    className="c1"
    size="medium"
    type="text"
  />
  <label
    className="c2"
    size="medium"
  >
    <b>
      Field Label
    </b>
  </label>
</div>
`;

exports[`Storyshots Inputs/Input Field default 1`] = `
.c2 {
  font-family: Lora;
  font-size: 0.8rem;
  text-align: left;
  color: #2d2d2d;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-width: 100%;
}

.c1 {
  width: 100%;
  border: none;
  margin: 0;
  padding: 0.2em;
  background: none;
  font-family: "Open Sans",arial,sans serif;
  color: #2d2d2d;
  font-size: calc(1pt + 1rem);
  border: none;
  border-bottom: 2px solid transparent;
  border-image: repeating-linear-gradient( to right, rgba(0,0,0,0), rgba(0,0,0,0) 2px, rgba(45,45,45,0.8) 2px, rgba(45,45,45,0.8) 3px ) 1 repeat;
}

.c1:active,
.c1:focus {
  outline: none;
}

<div
  className="c0"
>
  <input
    className="c1"
    onChange={[Function]}
    placeholder="Type a value"
    size="medium"
    type="string"
  />
  <label
    className="c2"
    size="medium"
  >
    Input Field Label
  </label>
</div>
`;

exports[`Storyshots Inputs/Textarea default 1`] = `
.c1 {
  font-family: Lora;
  font-size: 0.8rem;
  text-align: left;
  color: #2d2d2d;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-width: 100%;
}

.c2 {
  max-width: 100%;
  height: 100%;
  border: 1px solid rgba(0,0,0,0.2);
  border-radius: 1px;
  font-family: "Open Sans",arial,sans serif;
  font-size: 1rem;
  line-height: 1.25;
  resize: none;
}

.c2:focus {
  outline: none;
  border-color: rgba(0,0,0,0.4);
}

<div
  className="c0"
>
  <label
    className="c1"
    size="medium"
  >
    <b>
      Textarea
    </b>
  </label>
  <textarea
    className="c2"
    onChange={[Function]}
    value="I cannot do **Markdown** :("
  />
</div>
`;

exports[`Storyshots Inputs/checkbox default 1`] = `
.c0 {
  position: relative;
  height: 1rem;
  width: 1rem;
}

.c0 label {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: transparent;
  border: 1px solid #2d2d2d;
  border-radius: 50%;
  cursor: pointer;
}

.c0 input[type='checkbox'] {
  visibility: hidden;
  margin: 0;
  padding: 0;
  border: none;
  height: 100%;
  width: 100%;
}

.c0 input[type='checkbox']:checked + label {
  background-color: #2d2d2d;
  border-color: #2d2d2d;
}

<div
  className="c0"
  size="medium"
>
  <input
    name="default_checkbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    htmlFor="default_checkbox"
  />
</div>
`;

exports[`Storyshots Magic Spells default 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  margin: 0 0.4rem 0 0;
  font-family: Lora,Times,serif;
  font-size: 2.4rem;
  font-weight: bold;
}

.c4 {
  margin: 0;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c6 {
  margin: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-family: "Open Sans",arial,sans serif;
  font-size: 1.8rem;
  text-align: center;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  display: grid;
  grid-column-gap: 1rem;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  grid-template-columns: repeat(1,1fr);
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <h3
        className="c3"
      >
        0
      </h3>
      <p
        className="c4"
      >
        Spell
        <br />
        Level
      </p>
    </div>
    <div
      className="c5"
    >
      <p
        className="c6"
      >
        0
      </p>
      <p
        className="c4"
      >
        Slots Total
      </p>
    </div>
    <div
      className="c5"
    >
      <p
        className="c6"
      >
        0
      </p>
      <p
        className="c4"
      >
        Slots Extended
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Magic Spells with Spells 1`] = `
.c8 {
  position: relative;
  height: 0.6rem;
  width: 0.6rem;
}

.c8 label {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: transparent;
  border: 1px solid #2d2d2d;
  border-radius: 50%;
  cursor: pointer;
}

.c8 input[type='checkbox'] {
  visibility: hidden;
  margin: 0;
  padding: 0;
  border: none;
  height: 100%;
  width: 100%;
}

.c8 input[type='checkbox']:checked + label {
  background-color: #2d2d2d;
  border-color: #2d2d2d;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  margin: 0 0.4rem 0 0;
  font-family: Lora,Times,serif;
  font-size: 2.4rem;
  font-weight: bold;
}

.c4 {
  margin: 0;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c6 {
  margin: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-family: "Open Sans",arial,sans serif;
  font-size: 1.8rem;
  text-align: center;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  display: grid;
  grid-column-gap: 1rem;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  grid-template-columns: repeat(1,1fr);
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c9 {
  width: 100%;
  border: none;
  margin: 0;
  padding: 0.2em;
  background: none;
  font-family: "Open Sans",arial,sans serif;
  color: #2d2d2d;
  font-size: calc(1pt + 0.8rem);
  border: none;
  border-bottom: 2px solid transparent;
  border-image: repeating-linear-gradient( to right, rgba(0,0,0,0), rgba(0,0,0,0) 2px, rgba(45,45,45,0.8) 2px, rgba(45,45,45,0.8) 3px ) 1 repeat;
  margin-left: 0.6rem;
}

.c9:active,
.c9:focus {
  outline: none;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <h3
        className="c3"
      >
        0
      </h3>
      <p
        className="c4"
      >
        Spell
        <br />
        Level
      </p>
    </div>
    <div
      className="c5"
    >
      <p
        className="c6"
      >
        0
      </p>
      <p
        className="c4"
      >
        Slots Total
      </p>
    </div>
    <div
      className="c5"
    >
      <p
        className="c6"
      >
        0
      </p>
      <p
        className="c4"
      >
        Slots Extended
      </p>
    </div>
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
</div>
`;

exports[`Storyshots Magic Spells with Spells and columns 1`] = `
.c8 {
  position: relative;
  height: 0.6rem;
  width: 0.6rem;
}

.c8 label {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: transparent;
  border: 1px solid #2d2d2d;
  border-radius: 50%;
  cursor: pointer;
}

.c8 input[type='checkbox'] {
  visibility: hidden;
  margin: 0;
  padding: 0;
  border: none;
  height: 100%;
  width: 100%;
}

.c8 input[type='checkbox']:checked + label {
  background-color: #2d2d2d;
  border-color: #2d2d2d;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  margin: 0 0.4rem 0 0;
  font-family: Lora,Times,serif;
  font-size: 2.4rem;
  font-weight: bold;
}

.c4 {
  margin: 0;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c6 {
  margin: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  font-family: "Open Sans",arial,sans serif;
  font-size: 1.8rem;
  text-align: center;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  display: grid;
  grid-column-gap: 1rem;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  grid-template-columns: repeat(2,1fr);
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c9 {
  width: 100%;
  border: none;
  margin: 0;
  padding: 0.2em;
  background: none;
  font-family: "Open Sans",arial,sans serif;
  color: #2d2d2d;
  font-size: calc(1pt + 0.8rem);
  border: none;
  border-bottom: 2px solid transparent;
  border-image: repeating-linear-gradient( to right, rgba(0,0,0,0), rgba(0,0,0,0) 2px, rgba(45,45,45,0.8) 2px, rgba(45,45,45,0.8) 3px ) 1 repeat;
  margin-left: 0.6rem;
}

.c9:active,
.c9:focus {
  outline: none;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <h3
        className="c3"
      >
        0
      </h3>
      <p
        className="c4"
      >
        Spell
        <br />
        Level
      </p>
    </div>
    <div
      className="c5"
    >
      <p
        className="c6"
      >
        0
      </p>
      <p
        className="c4"
      >
        Slots Total
      </p>
    </div>
    <div
      className="c5"
    >
      <p
        className="c6"
      >
        0
      </p>
      <p
        className="c4"
      >
        Slots Extended
      </p>
    </div>
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
      size="xsmall"
    >
      <input
        name="spell-a"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="spell-a"
      />
    </div>
    <input
      className="c9"
      size="small"
    />
  </div>
</div>
`;

exports[`Storyshots Magic Stat default 1`] = `
.c0 {
  justify-self: inherit;
  height: 6.5rem;
  width: 4.4rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: stretch;
  -webkit-justify-content: stretch;
  -ms-flex-pack: stretch;
  justify-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c3 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin: 0;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
  font-weight: normal;
  line-height: 1.6;
  vertical-align: top;
  text-align: center;
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  position: relative;
  width: 100%;
  max-height: 100%;
  background: url(magic-outline.svg) no-repeat;
  background-size: 100% 100%;
}

.c2 {
  margin: 0;
  height: 100%;
  vertical-align: middle;
  font-family: "Open Sans",arial,sans serif;
  font-size: 2.4rem;
  line-height: 1.6;
  text-align: center;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <p
      className="c2"
    >
      15
    </p>
  </div>
  <h3
    className="c3"
  >
    Strength
  </h3>
</div>
`;

exports[`Storyshots Money default 1`] = `
.c0 {
  justify-self: inherit;
  height: 4rem;
  width: 4.4rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: stretch;
  -webkit-justify-content: stretch;
  -ms-flex-pack: stretch;
  justify-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c1 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin: 0;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
  font-weight: bold;
  line-height: 1.6;
  vertical-align: top;
  text-align: center;
}

.c2 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  position: relative;
  width: 100%;
  max-height: 100%;
  background: url(money_outline.svg) no-repeat;
  background-size: 100% 100%;
}

.c3 {
  margin: 0;
  height: 100%;
  vertical-align: middle;
  font-family: "Open Sans",arial,sans serif;
  line-height: 2.2;
  text-align: center;
}

<div
  className="c0"
>
  <h3
    className="c1"
  >
    Strength
  </h3>
  <div
    className="c2"
  >
    <p
      className="c3"
    >
      15
    </p>
  </div>
</div>
`;

exports[`Storyshots Skills/Skill Grid default 1`] = `
.c2 {
  position: relative;
  height: 0.6rem;
  width: 0.6rem;
}

.c2 label {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: transparent;
  border: 1px solid #2d2d2d;
  border-radius: 50%;
  cursor: pointer;
}

.c2 input[type='checkbox'] {
  visibility: hidden;
  margin: 0;
  padding: 0;
  border: none;
  height: 100%;
  width: 100%;
}

.c2 input[type='checkbox']:checked + label {
  background-color: #2d2d2d;
  border-color: #2d2d2d;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  border: none;
  border-bottom: 2px solid transparent;
  border-image: repeating-linear-gradient( to right, rgba(0,0,0,0), rgba(0,0,0,0) 2px, rgba(45,45,45,0.8) 2px, rgba(45,45,45,0.8) 3px ) 1 repeat;
  margin: 0 0.3rem;
  width: 1.2rem;
  font-family: "Open Sans",arial,sans serif;
  text-align: center;
}

.c4 {
  margin: 0;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c5 {
  margin: 0;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-left: 0.1rem;
  opacity: 0.75;
}

.c0 {
  display: grid;
  grid-gap: 0.2rem;
  grid-auto-flow: column;
  grid-template-rows: repeat(6,1fr);
  grid-auto-columns: auto;
}

<div
  className="c0"
  rows={6}
>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_1"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_1"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 1
    </p>
    <p
      className="c5"
    />
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_2"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_2"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 2
    </p>
    <p
      className="c5"
    />
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_3"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_3"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 3
    </p>
    <p
      className="c5"
    />
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_4"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_4"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 4
    </p>
    <p
      className="c5"
    />
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_5"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_5"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 5
    </p>
    <p
      className="c5"
    />
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_6"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_6"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 6
    </p>
    <p
      className="c5"
    />
  </div>
</div>
`;

exports[`Storyshots Skills/Skill Grid with 2 rows 1`] = `
.c2 {
  position: relative;
  height: 0.6rem;
  width: 0.6rem;
}

.c2 label {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: transparent;
  border: 1px solid #2d2d2d;
  border-radius: 50%;
  cursor: pointer;
}

.c2 input[type='checkbox'] {
  visibility: hidden;
  margin: 0;
  padding: 0;
  border: none;
  height: 100%;
  width: 100%;
}

.c2 input[type='checkbox']:checked + label {
  background-color: #2d2d2d;
  border-color: #2d2d2d;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  border: none;
  border-bottom: 2px solid transparent;
  border-image: repeating-linear-gradient( to right, rgba(0,0,0,0), rgba(0,0,0,0) 2px, rgba(45,45,45,0.8) 2px, rgba(45,45,45,0.8) 3px ) 1 repeat;
  margin: 0 0.3rem;
  width: 1.2rem;
  font-family: "Open Sans",arial,sans serif;
  text-align: center;
}

.c4 {
  margin: 0;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c5 {
  margin: 0;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-left: 0.1rem;
  opacity: 0.75;
}

.c0 {
  display: grid;
  grid-gap: 0.2rem;
  grid-auto-flow: column;
  grid-template-rows: repeat(2,1fr);
  grid-auto-columns: auto;
}

<div
  className="c0"
  rows={2}
>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_1"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_1"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 1
    </p>
    <p
      className="c5"
    />
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_2"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_2"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 2
    </p>
    <p
      className="c5"
    />
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_3"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_3"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 3
    </p>
    <p
      className="c5"
    />
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_4"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_4"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 4
    </p>
    <p
      className="c5"
    />
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_5"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_5"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 5
    </p>
    <p
      className="c5"
    />
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
      size="xsmall"
    >
      <input
        name="skill_skill_6"
        onChange={[Function]}
        type="checkbox"
      />
      <label
        htmlFor="skill_skill_6"
      />
    </div>
    <p
      className="c3"
    >
      0
    </p>
    <p
      className="c4"
    >
      Skill 6
    </p>
    <p
      className="c5"
    />
  </div>
</div>
`;

exports[`Storyshots Skills/Skill Line default 1`] = `
.c1 {
  position: relative;
  height: 0.6rem;
  width: 0.6rem;
}

.c1 label {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: transparent;
  border: 1px solid #2d2d2d;
  border-radius: 50%;
  cursor: pointer;
}

.c1 input[type='checkbox'] {
  visibility: hidden;
  margin: 0;
  padding: 0;
  border: none;
  height: 100%;
  width: 100%;
}

.c1 input[type='checkbox']:checked + label {
  background-color: #2d2d2d;
  border-color: #2d2d2d;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 {
  border: none;
  border-bottom: 2px solid transparent;
  border-image: repeating-linear-gradient( to right, rgba(0,0,0,0), rgba(0,0,0,0) 2px, rgba(45,45,45,0.8) 2px, rgba(45,45,45,0.8) 3px ) 1 repeat;
  margin: 0 0.3rem;
  width: 1.2rem;
  font-family: "Open Sans",arial,sans serif;
  text-align: center;
}

.c3 {
  margin: 0;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c4 {
  margin: 0;
  font-family: Lora,Times,serif;
  font-size: 0.8rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-left: 0.1rem;
  opacity: 0.75;
}

<div
  className="c0"
>
  <div
    className="c1"
    size="xsmall"
  >
    <input
      checked={false}
      name="skill_intimidation"
      onChange={[Function]}
      type="checkbox"
    />
    <label
      htmlFor="skill_intimidation"
    />
  </div>
  <p
    className="c2"
  >
    4
  </p>
  <p
    className="c3"
  >
    Intimidation
  </p>
  <p
    className="c4"
  >
    STR
  </p>
</div>
`;

exports[`Storyshots Tag custom 1`] = `
.c0 {
  background-color: #2d2d2d;
  font-family: "Open Sans",arial,sans serif;
  font-size: 0.6rem;
  color: white;
  border-radius: 1rem;
  padding: 0.1rem 0.4rem;
}

<span
  className="c0"
  color="#2d2d2d"
>
  value
</span>
`;

exports[`Storyshots Tag default 1`] = `
Array [
  .c1 {
  background-color: #2d2d2d;
  font-family: "Open Sans",arial,sans serif;
  font-size: 0.6rem;
  color: white;
  border-radius: 1rem;
  padding: 0.1rem 0.4rem;
}

.c0 {
  padding: 6px;
}

<div
    className="c0"
  >
    <span
      className="c1"
      color="#2d2d2d"
    >
      Default tag
    </span>
  </div>,
  .c1 {
  background-color: #1A5D90;
  font-family: "Open Sans",arial,sans serif;
  font-size: 0.6rem;
  color: white;
  border-radius: 1rem;
  padding: 0.1rem 0.4rem;
}

.c0 {
  padding: 6px;
}

<div
    className="c0"
  >
    <span
      className="c1"
      color="#1A5D90"
    >
      Blue tag
    </span>
  </div>,
  .c1 {
  background-color: #561E98;
  font-family: "Open Sans",arial,sans serif;
  font-size: 0.6rem;
  color: white;
  border-radius: 1rem;
  padding: 0.1rem 0.4rem;
}

.c0 {
  padding: 6px;
}

<div
    className="c0"
  >
    <span
      className="c1"
      color="#561E98"
    >
      Purple tag
    </span>
  </div>,
]
`;

exports[`Storyshots Weapon Table default 1`] = `
.c4 {
  position: relative;
  height: 0.8rem;
  width: 0.8rem;
}

.c4 label {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: transparent;
  border: 1px solid #2d2d2d;
  border-radius: 50%;
  cursor: pointer;
}

.c4 input[type='checkbox'] {
  visibility: hidden;
  margin: 0;
  padding: 0;
  border: none;
  height: 100%;
  width: 100%;
}

.c4 input[type='checkbox']:checked + label {
  background-color: #2d2d2d;
  border-color: #2d2d2d;
}

.c8 {
  background-color: #1A5D90;
  font-family: "Open Sans",arial,sans serif;
  font-size: 0.6rem;
  color: white;
  border-radius: 1rem;
  padding: 0.1rem 0.4rem;
}

.c6 {
  background-color: #561E98;
  font-family: "Open Sans",arial,sans serif;
  font-size: 0.6rem;
  color: white;
  border-radius: 1rem;
  padding: 0.1rem 0.4rem;
}

.c1 {
  width: 100%;
}

.c2 {
  font-family: Lora,Times,serif;
  font-weight: normal;
  font-size: 0.8rem;
  text-align: left;
}

.c3 {
  font-family: "Open Sans",arial,sans serif;
}

.c7 {
  font-family: "Open Sans",arial,sans serif;
  font-size: 0.8rem;
  font-style: italic;
}

.c5 {
  vertical-align: middle;
}

.c0 {
  width: 800px;
}

<div
  className="c0"
>
  <table
    className="c1"
  >
    <thead
      className=""
    >
      <tr
        className=""
      >
        <th
          className="c2"
        >
          Prof.
        </th>
        <th
          className="c2"
        >
          Name
        </th>
        <th
          className="c2"
        >
          Attack Bonus
        </th>
        <th
          className="c2"
        >
          Damage
        </th>
      </tr>
    </thead>
    <tbody
      className=""
    >
      <tr
        className=""
      >
        <td
          className="c3"
        >
          <div
            className="c4"
            size="small"
          >
            <input
              checked={true}
              name="weapon-proficiency"
              onChange={[Function]}
              type="checkbox"
            />
            <label
              htmlFor="weapon-proficiency"
            />
          </div>
        </td>
        <td
          className="c3"
        >
          <span
            className="c5"
          >
            Sun Blade
          </span>
           
          <span
            className="c6"
            color="#561E98"
          >
            Main hand
          </span>
        </td>
        <td
          className="c3"
        >
          +6
        </td>
        <td
          className="c3"
        >
          1d8+4
           
          Radiant
        </td>
      </tr>
      <tr
        className=""
      >
        <td
          className="c3"
        />
        <td
          className="c7"
          colSpan="3"
        >
          Finesse +1d8 damage when hitting Undead, Bonus action to create the blade,
        Sunlight: emits bright light in a 15-foot radius and dim light for an additional 15 feet, expand or reduce its
        radius of bright and dim light by 5 feet each, to a maximum of 30 feet each or a minimum of 10 feet each. -less
        </td>
      </tr>
      <tr
        className=""
      >
        <td
          className="c3"
        >
          <div
            className="c4"
            size="small"
          >
            <input
              checked={true}
              name="weapon-proficiency"
              onChange={[Function]}
              type="checkbox"
            />
            <label
              htmlFor="weapon-proficiency"
            />
          </div>
        </td>
        <td
          className="c3"
        >
          <span
            className="c5"
          >
            Moon Blade
          </span>
           
          <span
            className="c8"
            color="#1A5D90"
          >
            Off hand
          </span>
        </td>
        <td
          className="c3"
        >
          +6
        </td>
        <td
          className="c3"
        >
          1d8+2
           
          Slashing
        </td>
      </tr>
      <tr
        className=""
      >
        <td
          className="c3"
        />
        <td
          className="c7"
          colSpan="3"
        >
          Finesse, +1d8 damage when hitting Undead, Bonus action to create the blade +more
        </td>
      </tr>
      <tr
        className=""
      >
        <td
          className="c3"
        >
          <div
            className="c4"
            size="small"
          >
            <input
              checked={true}
              name="weapon-proficiency"
              onChange={[Function]}
              type="checkbox"
            />
            <label
              htmlFor="weapon-proficiency"
            />
          </div>
        </td>
        <td
          className="c3"
        >
          <span
            className="c5"
          >
            Light hammer
          </span>
           
        </td>
        <td
          className="c3"
        >
          +4
        </td>
        <td
          className="c3"
        >
          1d4+2
           
          Bludgeoning
        </td>
      </tr>
      <tr
        className=""
      >
        <td
          className="c3"
        />
        <td
          className="c7"
          colSpan="3"
        >
          Light, thrown (range 20/60)
        </td>
      </tr>
      <tr
        className=""
      >
        <td
          className="c3"
        >
          <div
            className="c4"
            size="small"
          >
            <input
              checked={false}
              name="weapon-proficiency"
              onChange={[Function]}
              type="checkbox"
            />
            <label
              htmlFor="weapon-proficiency"
            />
          </div>
        </td>
        <td
          className="c3"
        >
          <span
            className="c5"
          >
            Blowgun
          </span>
           
        </td>
        <td
          className="c3"
        >
          +1
        </td>
        <td
          className="c3"
        >
          1+4
           
          Piercing
        </td>
      </tr>
      <tr
        className=""
      >
        <td
          className="c3"
        />
        <td
          className="c7"
          colSpan="3"
        >
          Ammunition (range 100/400), loading
        </td>
      </tr>
    </tbody>
  </table>
</div>
`;
